<?php
namespace gordian\reefknot\http;

require_once dirname (__FILE__) . '/../../http/Request.php';

/**
 * Test class for Request.
 * Generated by PHPUnit on 2012-08-03 at 08:11:51.
 */
class RequestTest extends \PHPUnit_Framework_TestCase
{

	/**
	 * @var Request
	 */
	protected $object;
	
	/*
	 * Some example request data
	 */
	protected
		/**
		 * Reference data for setting up a Request
		 */
		$get		= array (
			'queryParam1'	=> '1', 
			'queryParam2'	=> 'The quick brown fox jumps over the lazy dog.'
		),
		$post		= array (
			'postParam1'	=> '2', 
			'postParam2'	=> "Only the fool would take trouble to verify that his sentence was composed of ten a's, three b's, four c's, four d's, forty-six e's, sixteen f's, four g's, thirteen h's, fifteen i's, two k's, nine l's, four m's, twenty-five n's, twenty-four o's, five p's, sixteen r's, forty-one s's, thirty-seven t's, ten u's, eight v's, eight w's, four x's, eleven y's, twenty-seven commas, twenty-three apostrophes, seven hyphens and, last but not least, a single !"
		),
		$cookie		= array (
			'cookieParam1'	=> '3', 
			'cookieParam2'	=> 'Big fjords vex quick waltz nymph.'
		),
		$files		= array (),
		$server		= array (
			'HTTP_HOST'				=> 'localhost',
			'HTTP_USER_AGENT'		=> 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.7; rv:14.0) Gecko/20100101 Firefox/14.0.1',
			'HTTP_ACCEPT'			=> 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
			'HTTP_ACCEPT_LANGUAGE'	=> 'en-gb,en;q=0.5',
			'HTTP_ACCEPT_ENCODING'	=> 'gzip, deflate', 
			'HTTP_DNT'				=> '1',
			'HTTP_CONNECTION'		=> 'keep-alive', 
			'HTTP_COOKIE'			=> 'cookieParam1=3&cookieParam2=Big%20fjords%20vex%20quick%20waltz%20nymph.',
			'PATH'					=> '/usr/bin:/bin:/usr/sbin:/sbin', 
			'SERVER_SIGNATURE'		=> 'Server signiture goes here',
			'SERVER_SOFTWARE'		=> 'Apache/2.2.21 (Unix) mod_ssl/2.2.21 OpenSSL/0.9.8r DAV/2 PHP/5.3.13', 
			'SERVER_NAME'			=> 'localhost',
			'SERVER_ADDR'			=> '127.0.0.1',
			'SERVER_PORT'			=> '80', 
			'REMOTE_ADDR'			=> '127.0.0.1',
			'DOCUMENT_ROOT'			=> '/usr/docs/dummy-host.example.com', 
			'SERVER_ADMIN'			=> 'webmaster@dummy-host.example.com',
			'SCRIPT_FILENAME'		=> '',
			'REMOTE_PORT'			=> '50847',
			'GATEWAY_INTERFACE'		=> 'SERVER_PROTOCOL',
			'REQUEST_METHOD'		=> 'GET',
			'QUERY_STRING'			=> 'queryParam1=1&queryParam2=The%20quick%20brown%20fox%20jumps%20over%20the%20lazy%20dog.',
			'REQUEST_URI'			=> '/foo/bar.baz.php?queryParam1=1&queryParam2=The%20quick%20brown%20fox%20jumps%20over%20the%20lazy%20dog.',
			'SCRIPT_NAME'			=> '',
			'PHP_SELF'				=> '',
		),
		$env		= array ();
	
	protected function prepServer ()
	{
		$prepped	= $this -> server;
		$prepped ['SCRIPT_NAME']		= $_SERVER ['SCRIPT_NAME'];
		$prepped ['SCRIPT_FILENAME']	= $_SERVER ['SCRIPT_FILENAME'];
		$prepped ['PHP_SELF']			= $_SERVER ['PHP_SELF'];
		$prepped ['REQUEST_TIME']		= time ();
		return $prepped;
	}
	
	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp ()
	{
		$this -> object = new Request ($this -> get, $this -> post, $this -> cookie, $this -> files, $this -> prepServer (), $this -> env);
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown ()
	{
		
	}

	/**
	 * @covers gordian\reefknot\http\Request::methodValid
	 * @todo Implement testMethodValid().
	 */
	public function testMethodValid ()
	{
		// Remove the following lines when you implement this test.
		$this -> markTestIncomplete (
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers gordian\reefknot\http\Request::getMethod
	 * @todo Implement testGetMethod().
	 */
	public function testGetMethod ()
	{
		// Remove the following lines when you implement this test.
		$this -> markTestIncomplete (
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers gordian\reefknot\http\Request::isConnect
	 * @todo Implement testIsConnect().
	 */
	public function testIsConnect ()
	{
		// Remove the following lines when you implement this test.
		$this -> markTestIncomplete (
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers gordian\reefknot\http\Request::isDelete
	 * @todo Implement testIsDelete().
	 */
	public function testIsDelete ()
	{
		// Remove the following lines when you implement this test.
		$this -> markTestIncomplete (
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers gordian\reefknot\http\Request::isGet
	 * @todo Implement testIsGet().
	 */
	public function testIsGet ()
	{
		// Remove the following lines when you implement this test.
		$this -> markTestIncomplete (
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers gordian\reefknot\http\Request::isHead
	 * @todo Implement testIsHead().
	 */
	public function testIsHead ()
	{
		// Remove the following lines when you implement this test.
		$this -> markTestIncomplete (
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers gordian\reefknot\http\Request::isOptions
	 * @todo Implement testIsOptions().
	 */
	public function testIsOptions ()
	{
		// Remove the following lines when you implement this test.
		$this -> markTestIncomplete (
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers gordian\reefknot\http\Request::isPost
	 * @todo Implement testIsPost().
	 */
	public function testIsPost ()
	{
		// Remove the following lines when you implement this test.
		$this -> markTestIncomplete (
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers gordian\reefknot\http\Request::isPut
	 * @todo Implement testIsPut().
	 */
	public function testIsPut ()
	{
		// Remove the following lines when you implement this test.
		$this -> markTestIncomplete (
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers gordian\reefknot\http\Request::isTrace
	 * @todo Implement testIsTrace().
	 */
	public function testIsTrace ()
	{
		// Remove the following lines when you implement this test.
		$this -> markTestIncomplete (
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers gordian\reefknot\http\Request::isSecure
	 * @todo Implement testIsSecure().
	 */
	public function testIsSecure ()
	{
		// Remove the following lines when you implement this test.
		$this -> markTestIncomplete (
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers gordian\reefknot\http\Request::getQuery
	 * @todo Implement testGetQuery().
	 */
	public function testGetQuery ()
	{
		// Remove the following lines when you implement this test.
		$this -> markTestIncomplete (
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers gordian\reefknot\http\Request::getQueryParam
	 * @todo Implement testGetQueryParam().
	 */
	public function testGetQueryParam ()
	{
		// Remove the following lines when you implement this test.
		$this -> markTestIncomplete (
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers gordian\reefknot\http\Request::getPost
	 * @todo Implement testGetPost().
	 */
	public function testGetPost ()
	{
		// Remove the following lines when you implement this test.
		$this -> markTestIncomplete (
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers gordian\reefknot\http\Request::getPostParam
	 * @todo Implement testGetPostParam().
	 */
	public function testGetPostParam ()
	{
		// Remove the following lines when you implement this test.
		$this -> markTestIncomplete (
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers gordian\reefknot\http\Request::getCookie
	 * @todo Implement testGetCookie().
	 */
	public function testGetCookie ()
	{
		// Remove the following lines when you implement this test.
		$this -> markTestIncomplete (
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers gordian\reefknot\http\Request::getCookieParam
	 * @todo Implement testGetCookieParam().
	 */
	public function testGetCookieParam ()
	{
		// Remove the following lines when you implement this test.
		$this -> markTestIncomplete (
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers gordian\reefknot\http\Request::getHeaders
	 * @todo Implement testGetHeaders().
	 */
	public function testGetHeaders ()
	{
		// Remove the following lines when you implement this test.
		$this -> markTestIncomplete (
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers gordian\reefknot\http\Request::getHeaderParam
	 * @todo Implement testGetHeaderParam().
	 */
	public function testGetHeaderParam ()
	{
		// Remove the following lines when you implement this test.
		$this -> markTestIncomplete (
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers gordian\reefknot\http\Request::IsXhr
	 * @todo Implement testIsXhr().
	 */
	public function testIsXhr ()
	{
		// Remove the following lines when you implement this test.
		$this -> markTestIncomplete (
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers gordian\reefknot\http\Request::getRequestBody
	 * @todo Implement testGetRequestBody().
	 */
	public function testGetRequestBody ()
	{
		// Remove the following lines when you implement this test.
		$this -> markTestIncomplete (
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers gordian\reefknot\http\Request::getUri
	 * @todo Implement testGetUri().
	 */
	public function testGetUri ()
	{
		// Remove the following lines when you implement this test.
		$this -> markTestIncomplete (
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers gordian\reefknot\http\Request::getFragment
	 * @todo Implement testGetFragment().
	 */
	public function testGetFragment ()
	{
		// Remove the following lines when you implement this test.
		$this -> markTestIncomplete (
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers gordian\reefknot\http\Request::getHost
	 * @todo Implement testGetHost().
	 */
	public function testGetHost ()
	{
		// Remove the following lines when you implement this test.
		$this -> markTestIncomplete (
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers gordian\reefknot\http\Request::getPassword
	 * @todo Implement testGetPassword().
	 */
	public function testGetPassword ()
	{
		// Remove the following lines when you implement this test.
		$this -> markTestIncomplete (
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers gordian\reefknot\http\Request::getPath
	 * @todo Implement testGetPath().
	 */
	public function testGetPath ()
	{
		// Remove the following lines when you implement this test.
		$this -> markTestIncomplete (
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers gordian\reefknot\http\Request::getPort
	 * @todo Implement testGetPort().
	 */
	public function testGetPort ()
	{
		// Remove the following lines when you implement this test.
		$this -> markTestIncomplete (
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers gordian\reefknot\http\Request::getScheme
	 * @todo Implement testGetScheme().
	 */
	public function testGetScheme ()
	{
		// Remove the following lines when you implement this test.
		$this -> markTestIncomplete (
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers gordian\reefknot\http\Request::getUser
	 * @todo Implement testGetUser().
	 */
	public function testGetUser ()
	{
		// Remove the following lines when you implement this test.
		$this -> markTestIncomplete (
			'This test has not been implemented yet.'
		);
	}

}

?>
