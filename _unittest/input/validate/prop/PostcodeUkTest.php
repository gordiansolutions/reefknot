<?php

namespace gordian\reefknot\input\validate\prop;

require_once dirname (__FILE__) . '/../../../../input/validate/prop/PostcodeUk.php';

/**
 * Test class for PostcodeUk.
 * Generated by PHPUnit on 2012-03-18 at 10:10:29.
 */
class PostcodeUkTest extends \PHPUnit_Framework_TestCase
{

	/**
	 * @var gordian\reefknot\input\validate\prop\PostcodeUk
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp ()
	{
		$this -> object = new PostcodeUk;
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown ()
	{
		
	}

	public function testIsValidNullPasses ()
	{
		$this -> object -> setData (NULL);
		$this -> assertTrue ($this -> object -> isValid ());
	}
	
	public function testIsValidPasses ()
	{
		$this -> object -> setData ('M1 1BA');
		$this -> assertTrue ($this -> object -> isValid ());
	}

	public function testIsValidPasses2 ()
	{
		$this -> object -> setData ('N12 1UD');
		$this -> assertTrue ($this -> object -> isValid ());
	}
	
	public function testIsValidPasses3 ()
	{
		$this -> object -> setData ('EH9 4UA');
		$this -> assertTrue ($this -> object -> isValid ());
	}

	public function testIsValidPasses4 ()
	{
		$this -> object -> setData ('RG6 1WG');
		$this -> assertTrue ($this -> object -> isValid ());
	}
	
	public function testIsValidPasses5 ()
	{
		$this -> object -> setData ('W1A 1NA');
		$this -> assertTrue ($this -> object -> isValid ());
	}
	
	public function testIsValidPasses6 ()
	{
		$this -> object -> setData ('SW1A 1HQ');
		$this -> assertTrue ($this -> object -> isValid ());
	}
	
	public function testIsValidWrongTypeThrowsException ()
	{
		$exception	= NULL;
		
		$this -> object -> setData (12345);
		try
		{
			$this -> object -> isValid ();
		}
		catch (\Exception $e)
		{
			$exception	= $e;
		}
		
		$this -> assertInstanceOf ('\InvalidArgumentException', $exception);
	}
}
